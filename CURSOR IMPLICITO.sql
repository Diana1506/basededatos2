create table ALMACEN (ID_ALMACEN INTEGER, UBICACION_ALMACEN VARCHAR2(50),
constraint PK_ID_ALMACEN PRIMARY KEY(ID_ALMACEN));

CREATE OR REPLACE PROCEDURE guardar_almacen (my_num_alm in integer, my_ubicacion in varchar2)
as
begin
insert into ALMACEN values (my_num_alm,my_ubicacion);
end;
/

--USAREMOS UN BLOQUE PLSQL QUE ETSA BIEN NUESTRO PROEEDIMIENTO

BEGIN
GUARDAR_ALMACEN (321,'ECATEPEC');
END;
/

SELECT * FROM ALMACEN; 

CREATE TABLE CLIENTE (NUMERO_CLIENTE INTEGER, NUMERO_ALMACEN INTEGER, NOMBRE_CLIENTE VARCHAR(80),
CONSTRAINT PK_N_C PRIMARY KEY(NUMERO_CLIENTE), 
CONSTRAINT FK1_N_A FOREIGN KEY (ID_ALMACEN)REFERENCES ALMACEN(ID_ALMACEN));

SELECT * FROM CLIENTE;

CREATE TABLE VENDEDOR(NUMERO_VENDEDOR INTEGER, NOMBRE_VENDEDOR VARCHAR2(80), AREA_VENTAS VARCHAR2(80),
CONSTRAINT PK_N_V PRIMARY KEY(NUMERO_VENDEDOR));



SELECT * FROM VENDEDOR;

CREATE TABLE VENTAS (ID_VENTAS INTEGER, NUMERO_CLIENTE INTEGER, NUMERO_VENDEDOR INTEGER, MONTO_VENTAS FLOAT,
CONSTRAINT PK_ID_V PRIMARY KEY (ID_VENTAS),
CONSTRAINT FK1_N_CL FOREIGN KEY (NUMERO_CLIENTE) REFERENCES CLIENTE(NUMERO_CLIENTE),
CONSTRAINT FK1_N_VEN FOREIGN KEY(NUMERO_VENDEDOR) REFERENCES VENDEDOR (NUMERO_VENDEDOR));







--PROBAR EL PROCEDIMIENTO CIN NETBEANS 
--EJEMPLO DE UNA TABLA Y SU PROCEDIMIENTO ALMACENADO PARA GUARDAR CON PK IMPUESTO O ARTIFICIAL

CREATE TABLE CALIFICACIONES (ID_CALIFICACION INTEGER, MATERIA VARCHAR2(80), VALOR FLOAT,
CONSTRAINT PK_ID_CAL PRIMARY KEY (ID_CALIFICACION));

--GENERAMOS UNA SECUENCIA
CREATE SEQUENCE SEC_CALIFICACIONES
START WITH 1
INCREMENT BY 1
NOMAXVALUE;

--AQUI YA VIENE EL PROCEDIMIENTO!!!!
CREATE OR REPLACE PROCEDURE GUARDAR_CALIFICACIONES(MY_ID_CALIFICACION OUT INTEGER, MY_MATERIA INT VARCHAR2, MY_VALOR IN FLOAT)
AS 
BEGIN 
SELECT SEC_CALIFICACIONES.NEXTVAL INTO MY_ID_CALIFICACION FROM DUAL;
INSERT INTO CALIFICACIONES VALUES (MY_ID_CALIFICACION, MY_MATERIA, MY_VALOR));
END;
/






